{"name": "PycoQC", "description": "PycoQC long read QC plots", "docker_image_name": "quay.io/biocontainers/pycoqc", "docker_image_tag": "2.5.2--py_0", "priority": "1", "icon": null, "inputs": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["inputFile", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["Trigger", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["outputDir", {"callback": null, "type": {"py/type": "builtins.str"}}]}]}]}, "outputs": null, "volumes": null, "ports": null, "parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["inputFile", {"flag": null, "label": "Input sequencing summary txt/tsv file", "type": "file list", "env": "INPUTFILE"}]}, {"py/tuple": ["minPassQual", {"flag": "--min_pass_qual ", "label": "Minimum quality to consider a read as 'pass'", "type": "int"}]}, {"py/tuple": ["minPassLen", {"flag": "--min_pass_len ", "label": "Minimum read length to consider a read as 'pass'", "type": "int"}]}, {"py/tuple": ["filterCalibration", {"flag": "--filter_calibration ", "label": "Reads flagged as calibration strand by the basecaller are removed", "type": "bool"}]}, {"py/tuple": ["filterDuplicated", {"flag": "--filter_duplicated ", "label": "Duplicated read_ids are removed but the first occurence is kept", "type": "bool"}]}, {"py/tuple": ["minBarcodePercent", {"flag": "--min_barcode_percent ", "label": "Minimal percent of total reads to retain barcode label (\"unclassified\" if below value)", "type": "double"}]}, {"py/tuple": ["reportTitle", {"flag": "--report_title ", "label": "HTML report title", "type": "str"}]}, {"py/tuple": ["templateFile", {"flag": "--template_file ", "label": "Jinja2 HTML template", "type": "file"}]}, {"py/tuple": ["bamFile", {"flag": "-a ", "label": "Aligned bam file that matches with summary txt file", "type": "file list"}]}, {"py/tuple": ["verbose", {"flag": "-v ", "label": "Verbose console output", "type": "bool"}]}, {"py/tuple": ["outputDir", {"flag": null, "label": "Output directory to store html file", "type": "directory", "env": "OUTDIR"}]}]}]}, "command": ["BASENAME=$(basename \"$INPUTFILE\" .txt)", "BASENAME=$(basename \"$BASENAME\" .tsv)", "FILENAME=\"PycoQC_${BASENAME}.html\" ", "mkdir -p \"$OUTDIR\"", "pycoQC -f \"$INPUTFILE\" -o \"${OUTDIR}/${FILENAME}\""], "autoMap": true, "runDockerMap": null, "nextFlowMap": null, "persistentSettings": "all", "requiredParameters": ["inputFile", "outputDir"]}