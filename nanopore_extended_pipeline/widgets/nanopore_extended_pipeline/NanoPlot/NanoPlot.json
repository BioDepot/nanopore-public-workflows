{"name": "NanoPlot", "description": "NanoPlot QC", "docker_image_name": "quay.io/biocontainers/nanoplot", "docker_image_tag": "1.43.0--pyhdfd78af_1", "priority": "1", "icon": null, "inputs": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["Trigger", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["fastq", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["fastqRich", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["fasta", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["summary", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["bam", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["ubam", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["outputDir", {"callback": null, "type": {"py/type": "builtins.str"}}]}]}]}, "outputs": null, "volumes": null, "ports": null, "parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["fastq", {"flag": "--fastq ", "label": "Data is FASTQ (SELECT ONE)", "type": "file list"}]}, {"py/tuple": ["fastqRich", {"flag": "--fastq_rich ", "label": "Data is FASTQ with channel and time info (SELECT ONE)", "type": "file list"}]}, {"py/tuple": ["fasta", {"flag": "--fasta ", "label": "Data is FASTA (SELECT ONE)", "type": "file list"}]}, {"py/tuple": ["summary", {"flag": "--summary ", "label": "Data is SUMMARY file (SELECT ONE)", "type": "file list"}]}, {"py/tuple": ["bam", {"flag": "--bam ", "label": "Data is sorted BAM (SELECT ONE)", "type": "file list"}]}, {"py/tuple": ["ubam", {"flag": "--ubam ", "label": "Data is unmapped BAM (SELECT ONE)", "type": "file list"}]}, {"py/tuple": ["outputDir", {"flag": "-o ", "label": "Output direcotry", "type": "directory"}]}, {"py/tuple": ["prefix", {"flag": "-p ", "label": "Add prefix to output files", "type": "text list"}]}, {"py/tuple": ["verbose", {"flag": null, "label": "Verbose console output", "type": "bool"}]}, {"py/tuple": ["threads", {"flag": "-t ", "label": "Allowed number of threads", "type": "int"}]}, {"py/tuple": ["infoInReport", {"flag": "--info_in_report ", "label": "Add NanoPlot run info in report", "type": "bool"}]}, {"py/tuple": ["maxLength", {"flag": "--maxlength ", "label": "Hide reads longer than length specified", "type": "int"}]}, {"py/tuple": ["minLength", {"flag": "--minlength ", "label": "Hide reads shorter than length specified", "type": "int"}]}, {"py/tuple": ["dropOutliers", {"flag": "--drop_outliers ", "label": "Drop outlier reads with extreme long length", "type": "bool"}]}, {"py/tuple": ["downsample", {"flag": "--downsample", "label": "Reduce dataset to ___ reads by random sampling", "type": "int"}]}, {"py/tuple": ["logLength", {"flag": "--loglength ", "label": "Additionally show logarithmic scaling of lengths in plots", "type": "bool"}]}, {"py/tuple": ["percentQual", {"flag": "--percentqual ", "label": "Use qualities as theoretical percent identities", "type": "bool"}]}, {"py/tuple": ["alength", {"flag": "--alength ", "label": "Use aligned read lengths rather than sequenced length (bam mode)", "type": "bool"}]}, {"py/tuple": ["minqual", {"flag": "--minqual ", "label": "Drop reads with an average quality lower than specified", "type": "int"}]}, {"py/tuple": ["barcoded", {"flag": "--barcoded ", "label": "split the summary file by barcode", "type": "bool"}]}, {"py/tuple": ["huge", {"flag": "--huge ", "label": "Input data is one very large file", "type": "bool"}]}]}]}, "command": ["NanoPlot "], "autoMap": true, "runDockerMap": null, "nextFlowMap": null, "persistentSettings": "all", "requiredParameters": ["outputDir"]}